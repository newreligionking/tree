{
	"id": "bf64bef2d4f2d415a7787b18c3bf0017",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Seed.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport { Leaf } from \"contracts/Leaf.sol\";\r\n\r\nabstract contract Seed {\r\n    address public implementation;\r\n    event NewLeaf(bytes4 indexed selector, address indexed implementation);\r\n    function deploy(bytes4 selector, address _implementation) external payable returns (address deployed) {\r\n        _authorize();\r\n        implementation = _implementation;\r\n        bytes32 salt = bytes32(selector);\r\n        deployed = address(new Leaf{salt: salt, value: msg.value}());\r\n        if (deployed == address(0)) revert();\r\n        emit NewLeaf(selector, _implementation);\r\n    }\r\n    function _authorize() internal virtual;\r\n}"
			},
			"contracts/Leaf.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport { Seed } from \"contracts/Seed.sol\";\r\n\r\ncontract Leaf {\r\n    constructor() payable {\r\n        Seed seed = Seed(msg.sender);\r\n        address implementation = seed.implementation();\r\n        assembly {\r\n            let size := extcodesize(implementation)\r\n            extcodecopy(implementation, 0, 0, size)\r\n            return(0, size)\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Leaf.sol": {
				"Leaf": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Leaf.sol\":106:422  contract Leaf {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Leaf.sol\":160:169  Seed seed */\n  0x00\n    /* \"contracts/Leaf.sol\":177:187  msg.sender */\n  caller\n    /* \"contracts/Leaf.sol\":160:188  Seed seed = Seed(msg.sender) */\n  swap1\n  pop\n    /* \"contracts/Leaf.sol\":199:221  address implementation */\n  0x00\n    /* \"contracts/Leaf.sol\":224:228  seed */\n  dup2\n    /* \"contracts/Leaf.sol\":224:243  seed.implementation */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x5c60da1b\n    /* \"contracts/Leaf.sol\":224:245  seed.implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_4\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_4:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/Leaf.sol\":199:245  address implementation = seed.implementation() */\n  swap1\n  pop\n    /* \"contracts/Leaf.sol\":304:318  implementation */\n  dup1\n    /* \"contracts/Leaf.sol\":292:319  extcodesize(implementation) */\n  extcodesize\n    /* \"contracts/Leaf.sol\":367:371  size */\n  dup1\n    /* \"contracts/Leaf.sol\":364:365  0 */\n  0x00\n    /* \"contracts/Leaf.sol\":361:362  0 */\n  dup1\n    /* \"contracts/Leaf.sol\":345:359  implementation */\n  dup5\n    /* \"contracts/Leaf.sol\":333:372  extcodecopy(implementation, 0, 0, size) */\n  extcodecopy\n    /* \"contracts/Leaf.sol\":396:400  size */\n  dup1\n    /* \"contracts/Leaf.sol\":393:394  0 */\n  0x00\n    /* \"contracts/Leaf.sol\":386:401  return(0, size) */\n  return\n    /* \"#utility.yul\":88:205   */\ntag_9:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_11:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_12:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_11\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_13:\n    /* \"#utility.yul\":641:665   */\n  tag_23\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_24:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_14:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_26\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_6:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_29\n  tag_9\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":932:1051   */\ntag_28:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_30\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_14\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"contracts/Leaf.sol\":106:422  contract Leaf {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200afca8bcf310ffe09bf63e25252e584813bf0eda898c5acb9b355074991a39a464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600033905060008173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061007a91906100ec565b9050803b80600080843c806000f35b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b98261008e565b9050919050565b6100c9816100ae565b81146100d457600080fd5b50565b6000815190506100e6816100c0565b92915050565b60006020828403121561010257610101610089565b5b6000610110848285016100d7565b9150509291505056fe",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A SWAP2 SWAP1 PUSH2 0xEC JUMP JUMPDEST SWAP1 POP DUP1 EXTCODESIZE DUP1 PUSH1 0x0 DUP1 DUP5 EXTCODECOPY DUP1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9 DUP2 PUSH2 0xAE JUMP JUMPDEST DUP2 EQ PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE6 DUP2 PUSH2 0xC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102 JUMPI PUSH2 0x101 PUSH2 0x89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x110 DUP5 DUP3 DUP6 ADD PUSH2 0xD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID ",
							"sourceMap": "106:316:0:-:0;;;160:9;177:10;160:28;;199:22;224:4;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;199:46;;304:14;292:27;367:4;364:1;361;345:14;333:39;396:4;393:1;386:15;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200afca8bcf310ffe09bf63e25252e584813bf0eda898c5acb9b355074991a39a464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xFC 0xA8 0xBC RETURN LT SELFDESTRUCT 0xE0 SWAP12 0xF6 RETURNDATACOPY 0x25 0x25 0x2E PC BASEFEE SGT 0xBF 0xE 0xDA DUP10 DUP13 GAS 0xCB SWAP12 CALLDATALOAD POP PUSH21 0x991A39A464736F6C63430008120033000000000000 ",
							"sourceMap": "106:316:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 106,
									"end": 422,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 106,
									"end": 422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 106,
									"end": 422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 160,
									"end": 169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 187,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 160,
									"end": 188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 160,
									"end": 188,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 221,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 224,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 224,
									"end": 243,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 224,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "5C60DA1B"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 245,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 224,
									"end": 245,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 199,
									"end": 245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 304,
									"end": 318,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 292,
									"end": 319,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 367,
									"end": 371,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 364,
									"end": 365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 345,
									"end": 359,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 333,
									"end": 372,
									"name": "EXTCODECOPY",
									"source": 0
								},
								{
									"begin": 396,
									"end": 400,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 393,
									"end": 394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 401,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200afca8bcf310ffe09bf63e25252e584813bf0eda898c5acb9b355074991a39a464736f6c63430008120033",
									".code": [
										{
											"begin": 106,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 106,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 106,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 422,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Leaf.sol",
								"contracts/Seed.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Leaf.sol\":\"Leaf\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Leaf.sol\":{\"keccak256\":\"0x58bd0d7196a7c202b3afbbc6d9a638d913c047d0c63473cecc760d61f51e938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f339043154e7c7b7cbf8329121ada21a46c22b7d7c8efc31ac42dc7e1cff5eb\",\"dweb:/ipfs/QmYxqt2AFFDX4hQjMUJLoqrhPcx2LswaELkGxnPZo5nESy\"]},\"contracts/Seed.sol\":{\"keccak256\":\"0x1755d0260b5814ca6fc4aaa25924f25595c8f3708112218a5dee247f5cff6aef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdaa111ec992824502edf439503188ff2c6918524010ccf9078ffae50064e8d7\",\"dweb:/ipfs/QmY9bpeVtJaTGW1rnmCBfd385kRousGaeLX6QfUbehrN59\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Seed.sol": {
				"Seed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "NewLeaf",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "deployed",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deploy(bytes4,address)": "997b81c9",
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewLeaf\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Seed.sol\":\"Seed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Leaf.sol\":{\"keccak256\":\"0x58bd0d7196a7c202b3afbbc6d9a638d913c047d0c63473cecc760d61f51e938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f339043154e7c7b7cbf8329121ada21a46c22b7d7c8efc31ac42dc7e1cff5eb\",\"dweb:/ipfs/QmYxqt2AFFDX4hQjMUJLoqrhPcx2LswaELkGxnPZo5nESy\"]},\"contracts/Seed.sol\":{\"keccak256\":\"0x1755d0260b5814ca6fc4aaa25924f25595c8f3708112218a5dee247f5cff6aef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdaa111ec992824502edf439503188ff2c6918524010ccf9078ffae50064e8d7\",\"dweb:/ipfs/QmY9bpeVtJaTGW1rnmCBfd385kRousGaeLX6QfUbehrN59\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "contracts/Seed.sol:Seed",
								"label": "implementation",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Leaf.sol": {
				"ast": {
					"absolutePath": "contracts/Leaf.sol",
					"exportedSymbols": {
						"Leaf": [
							23
						],
						"Seed": [
							92
						]
					},
					"id": 24,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/Seed.sol",
							"file": "contracts/Seed.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 24,
							"sourceUnit": 93,
							"src": "60:42:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Seed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 92,
										"src": "69:4:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Leaf",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "Leaf",
							"nameLocation": "115:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "149:270:0",
										"statements": [
											{
												"assignments": [
													8
												],
												"declarations": [
													{
														"constant": false,
														"id": 8,
														"mutability": "mutable",
														"name": "seed",
														"nameLocation": "165:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 21,
														"src": "160:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Seed_$92",
															"typeString": "contract Seed"
														},
														"typeName": {
															"id": 7,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 6,
																"name": "Seed",
																"nameLocations": [
																	"160:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 92,
																"src": "160:4:0"
															},
															"referencedDeclaration": 92,
															"src": "160:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Seed_$92",
																"typeString": "contract Seed"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 13,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 10,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "177:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "181:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "177:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 9,
														"name": "Seed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "172:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Seed_$92_$",
															"typeString": "type(contract Seed)"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "172:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Seed_$92",
														"typeString": "contract Seed"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "160:28:0"
											},
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "implementation",
														"nameLocation": "207:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 21,
														"src": "199:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 14,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "199:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 16,
															"name": "seed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Seed_$92",
																"typeString": "contract Seed"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "229:14:0",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "224:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "224:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "199:46:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "265:147:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "280:39:0",
															"value": {
																"arguments": [
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "304:14:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "292:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:27:0"
															},
															"variables": [
																{
																	"name": "size",
																	"nodeType": "YulTypedName",
																	"src": "284:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "345:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "361:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "364:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "367:4:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nodeType": "YulIdentifier",
																	"src": "333:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "333:39:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "333:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "393:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "396:4:0"
																	}
																],
																"functionName": {
																	"name": "return",
																	"nodeType": "YulIdentifier",
																	"src": "386:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:15:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "386:15:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 15,
														"isOffset": false,
														"isSlot": false,
														"src": "304:14:0",
														"valueSize": 1
													},
													{
														"declaration": 15,
														"isOffset": false,
														"isSlot": false,
														"src": "345:14:0",
														"valueSize": 1
													}
												],
												"id": 20,
												"nodeType": "InlineAssembly",
												"src": "256:156:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "138:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "149:0:0"
									},
									"scope": 23,
									"src": "127:292:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 24,
							"src": "106:316:0",
							"usedErrors": []
						}
					],
					"src": "33:389:0"
				},
				"id": 0
			},
			"contracts/Seed.sol": {
				"ast": {
					"absolutePath": "contracts/Seed.sol",
					"exportedSymbols": {
						"Leaf": [
							23
						],
						"Seed": [
							92
						]
					},
					"id": 93,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 25,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/Leaf.sol",
							"file": "contracts/Leaf.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 93,
							"sourceUnit": 24,
							"src": "60:42:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 26,
										"name": "Leaf",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 23,
										"src": "69:4:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Seed",
							"contractDependencies": [
								23
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 92,
							"linearizedBaseContracts": [
								92
							],
							"name": "Seed",
							"nameLocation": "124:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 29,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "151:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 92,
									"src": "136:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "136:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "37d0de5bda26e6d2e72c27ec220f13259da66955718f6407d2b3f6ee4091b1e5",
									"id": 35,
									"name": "NewLeaf",
									"nameLocation": "178:7:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "201:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "186:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 30,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "186:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "227:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "211:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "185:57:1"
									},
									"src": "172:71:1"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "351:285:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 44,
														"name": "_authorize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "362:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "362:12:1"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "385:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "402:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "385:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "385:32:1"
											},
											{
												"assignments": [
													52
												],
												"declarations": [
													{
														"constant": false,
														"id": 52,
														"mutability": "mutable",
														"name": "salt",
														"nameLocation": "436:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "428:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 51,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 57,
												"initialValue": {
													"arguments": [
														{
															"id": 55,
															"name": "selector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "451:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "443:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 53,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "443:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "443:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "428:32:1"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 58,
														"name": "deployed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "471:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "490:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_creation_payable$__$returns$_t_contract$_Leaf_$23_$",
																			"typeString": "function () payable returns (contract Leaf)"
																		},
																		"typeName": {
																			"id": 62,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 61,
																				"name": "Leaf",
																				"nameLocations": [
																					"494:4:1"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 23,
																				"src": "494:4:1"
																			},
																			"referencedDeclaration": 23,
																			"src": "494:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Leaf_$23",
																				"typeString": "contract Leaf"
																			}
																		}
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"salt",
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 64,
																			"name": "salt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "505:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 65,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "518:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "522:5:1",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "518:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "490:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_creation_payable$__$returns$_t_contract$_Leaf_$23_$valuesalt",
																		"typeString": "function () payable returns (contract Leaf)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "490:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Leaf_$23",
																	"typeString": "contract Leaf"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Leaf_$23",
																	"typeString": "contract Leaf"
																}
															],
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "482:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 59,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "482:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "482:49:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "471:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "471:60:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 72,
														"name": "deployed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "546:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "546:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"nodeType": "IfStatement",
												"src": "542:36:1",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 78,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "570:8:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 80,
													"nodeType": "ExpressionStatement",
													"src": "570:8:1"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 83,
															"name": "selector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "602:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 84,
															"name": "_implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "612:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 82,
														"name": "NewLeaf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "594:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$returns$__$",
															"typeString": "function (bytes4,address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "594:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "EmitStatement",
												"src": "589:39:1"
											}
										]
									},
									"functionSelector": "997b81c9",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "258:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "272:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "265:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 36,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "265:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "290:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "282:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:42:1"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "deployed",
												"nameLocation": "341:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "333:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:18:1"
									},
									"scope": 92,
									"src": "249:387:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorize",
									"nameLocation": "651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:0:1"
									},
									"scope": 92,
									"src": "642:39:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 93,
							"src": "106:578:1",
							"usedErrors": []
						}
					],
					"src": "33:651:1"
				},
				"id": 1
			}
		}
	}
}